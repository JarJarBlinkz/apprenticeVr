appId: com.apprenticevr
productName: apprenticevr
directories:
  buildResources: build
files:
  - '!**/.vscode/*'
  - '!src/*'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintcache,eslint.config.mjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'
asarUnpack:
  - resources/**
extraResources:
  - from: resources/bin/${os}
    to: bin
    filter:
      - '**/*'
  - from: resources/bin
    to: bin
    filter:
      - '*'
win:
  target:
    - target: nsis
      arch:
        - x64
        - ia32
    - target: portable
      arch:
        - x64
        - ia32
  executableName: apprenticevr
nsis:
  artifactName: ${name}-${version}-setup-${arch}.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
portable:
  artifactName: ${name}-${version}-portable-${arch}.${ext}
mac:
  target:
    - target: dmg
      arch:
        - x64
        - arm64
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false
dmg:
  artifactName: ${name}-${version}-${arch}.${ext}
linux:
  target:
    - target: AppImage
      arch:
        - x64
        - arm64
    - target: deb
      arch:
        - x64
        - arm64
  maintainer: electronjs.org
  category: Utility
appImage:
  artifactName: ${name}-${version}-${arch}.${ext}
deb:
  artifactName: ${name}-${version}-${arch}.${ext}
npmRebuild: false
publish:
  provider: github
  owner: jimzrt
  repo: apprenticevr
electronDownload:
  mirror: https://npmmirror.com/mirrors/electron/
